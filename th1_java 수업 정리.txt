>> day32 - 23/12/13

  > JDBC


 > MVC (Model2)

  Model <--- DB를 클래스로 만든다.
  View  <--- main
  Controller <--- 뷰 와 모델을 연결 역할 

 문제] dept table 이용해서 공통사항은 connect(), selectAll() 으로 만드시고,
   각 팀별 1팀 - delete 
  	2팀 - update
	3팀 - insert
	4팀 - 조건에 의한 검색 selectByDeptno()
 	5팀 - update


======================================
>> day31 - 23/12/12

  > network   <---- java.net.* ; 

  > JDBC

 **************************************************************************
【 Database별 Driver 와 connection URL 】

DATABASE | VALUE 
---------------------------------------------------
ORACLE | DRIVER | oracle.jdbc.driver.OracleDriver 
| URL | jdbc:oracle:thin:@hostname:port:SID 

MSSQL | DRIVER | com.microsoft.jdbc.sqlserver.SQLServerDriver 
| URL | jdbc:Microsoft:sqlserver://localhost:1433;databasename=DB명 

MYSQL | DRIVER | org.gjt.mm.mysql.Driver | | (또는)com.mysql.jdbc.Driver
| URL | jdbc:mysql://localhost:3306/DB명 

MARIA | DRIVER | org.mariadb.jdbc.Driver 
| URL | jdbc:mariadb://localhost:3306/DB명 


(3) 프로그램에서 DB연결

1단계 : JDBC드라이버 로드
Class.forName("드라이버종류");

★ 드라이버 종류
1. Access드라이버(ODBC) : Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
2. MySQL 드라이버: Class.forName(“com.mysql.jdbc.Driver”);
3. 오라클 드라이버 : Class.forName(“oracle.jdbc.OracleDriver”);
4. MS-SQL 드라이버 : Class.forName("com.microsoft.jdbc.sqlserver.SQLServerDriver ");

--------------------------------------------------------------------
예)Connection conn = DriverManager.getConnection("jdbc:odbc:jdbc", "kingsmile", "oracle");

1. Access인경우 : jdbc:odbc:ODBC명
2. 오라클인경우 : jdbc:oracle:thin:@localhost:1521:SID
3. MySQL인경우 : jdbc:mysql://localhost:3306/DB명
4. MS-SQL인경우 : jdbc:Microsoft:sqlserver://localhost:1433;databasename=DB명 
------------------------------------------------------------------
  1) 드라이버 로드
	Class.forName("org.mariadb.jdbc.Driver");
  2) 연결 
	Connection conn = DriverManager.getConnection(url, uid, pwd); 
  3) SQL 명령어 사용
	Statement stmt = conn.createStatement();
	ResultSet rs = stmt.executeQuery(" select * from gift "); //반환값 있는 경우
	-----------------------------------------------------------------
	stmt.executeUpdate(sql);  // 반환값이 없는 경우 
  4) 닫기
	rs.close();    stmt.close();    conn.close();

  - API 확인하기

 > Database 연결 eclipse : Data Source Exploer


 > MVC (Model2)

  Model <--- DB를 클래스로 만든다.
  View  <--- main
  Controller <--- 뷰 와 모델을 연결 역할 

  - https://mvnrepository.com
  - https://search.maven.org

=================================
>> day30 - 23/12/11

> Lambda Expression  
  JDK 8.0 이상
  형식>  ( ) -> { }
   (매개변수 목록) -> { 실행문 }

  - 불필요한 클래스의 정의도 없다.
  - 메소드의 리턴 타입도 없고, 이름도 없다. (익명)
  - Anonymous Function(익명함수) ===> 익명클래스로 봐도 됨
 
 ex)
  public int sum(int x, int y ) {  return  x + y ;  }
  ( x ,  y ) -> { x + y }

 -- 장점 --
 . 코드를 간결하게 만들 수 있다.
 . 코드가 간결하고 식에 개발자의 의도가 명확히 드러나기에 가독성이 향상된다.
 . 코딩 시간 줄어듬
 . 병렬프로그래밍이 가능함 

 -- 단점 -- 
 . 재사용이 불가능하다
 . 디버깅이 다소 까다롭다.
 . 람다를 남발하면 코드가 지저분함(중복 생성 할 가능성이 높음)
 . 재귀로 만들 경우에는 부적합하다.

 > network   <---- java.net.* ; 
    - 1개의 회선은 1개 site 
         " port number " 

  cmd>netstat  -a or -n or -an

   - TCP             vs          UDP
  신뢰성있음	      신뢰성 낮음	
  양방향성(전화)	      단방향성(방송국, 편지)
  채팅프로그램 	      동영상강좌 - 대용량 데이터 전송에 좋음
	
 -- packet
 -- protocal

 > JDBC

 https://mariadb.com/kb/en/installing-mariadb-connectorj
 - 버전별 jar 파일 다운로드 사이트
 https://mariadb.com/kb/en/mariadb-connector-j-releases

 https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client/3.3.1

  - https://mvnrepository.com
  - https://search.maven.org



================================
>> day29 - 23/12/07

 > Thread 
   - 1의 CPU는 1의 작업
      "시간차"
  
   Thread  class
   Runnable  interface 

   public void run()  {  }   // 스레드 실행부(구현부)

 > Syncronized (동기화)

 public synchronized void deposit(int amount, String name) {
		임계영역....
 }

 public void withdraw(int amount, String name) {
	synchronized (this) {
		임계영역....
	}
 }

  > inner class

  > event
   ~~~Listener : interface 기반
   ~~~Apdater : class 기반


  > GUI : awt, swing, JavaFX ( jdk 7.0 이후~ )

  
====================================
>> day29 - 23/12/07

 > hash table
   https://velog.io/@edie_ko/hashtable-with-js
  - 해시 충돌 해결 방법
 1) open addressing ( Linear Probing )

 2) seperate chaining : 버킷에는 링크드 리스트(linked list)나 트리(tree)를 사용

  > File 

 URI
 URL
 URN

  DataInputStream		 / DataOutputStream
  ObjectInputStream 	 / ObjectOutputStream
 
   readXXX();	     		writeXXX(); 	
       자료형		  	     자료형


 > RandomAccessFile : r/w 가능,  seek(long)

문제] 비만도 측정 프로그램 작성 - collection, file, io 이용하기
    추가 / 삭제 / 출력 / 수정  처리할것 (file 저장 함수 따로 만들수도 있고)

 몸무게, 키를 입력 받아서  BMI 계산하기
 BMI = 몸무게 / ( (키 / 100.0) * (키 / 100.0) ); 

  남 : (신장cm - 100) X 0.9
  여 : (신장cm - 100) X 0.85
-
판정>
18.5 미만 저체중
18.5 ~ 22.9  정상
23.0 ~ 24.9  과체중
25.0  이상 비만 



===========================================
>> day28 - 23/12/06

 > Collection 정리 및 오후 시간대에 자료구조 조금씩!!
   
 https://www.convertstring.com/Hash/SHA256

  9522471254E1015C187C1E4C4930E85EB159CA8B330099510D80CBF38BA7F534

  2C68318E352971113645CBC72861E1EC23F48D5BAA5F9B405FED9DDDCA893EB4
  e9a95de0add7606bda402b28a3630cf4b0f8c9b2


 > Generic(제너릭) : jdk 5.x 

 > IO ( Input  Ouput ) <----- java.io package, 단방향 처리 

    		Input   			output
  byte	     ~~~~InputStream 	      ~~~~OutputStream 
  charater      ~~~~Reader		      ~~~~Writer 

  -- InputStream  : 입력의 최상위 클래스 : read()
  -- OutputStream : 출력의 최상위 클래스 : write()


======================================
>> day27 - 23/12/05

 > Collection (자료구조) : 시스템에 효율적으로 데이터를 조작, 저장하는 방법에 대한 연구
 cf) 알고리즘 : 어떤 일에 대한 처리 방법, 절차 
                     문제 해결 방법을 정의한 '일련의 단계적 절차'이자 어떠한 문제를 해결하기 위한 '동작들의 모임'이다

 1) Set : 순서없고, 중복허용하지 않음
     HashSet / TreeSet

 2) List : 순서있고, 중복허용한다
  - 변수 ----> 배열( 고정길이 )  -----> 가변길이      
              int  arr[30] 
              char[] ch = new char[10];

    Vector <----- jdk 1.x , 가변길이,  동기화 지원
    ArrayList  <--- jdk 2.x , 가변길이, 동기화 지원 안함.
    		검색, 대량의 데이터 삽입/삭제
    LinkedList  <--- data 삽입/삭제 수월함
    Stack
    ....

 3) Map ( set + list ) 
     <key, value> 한쌍으로 처리 
    Hashmap / Treemap

  ======================================
>> day26 - 23/12/04

 > Collection (자료구조) : 시스템에 효율적으로 데이터를 조작, 저장하는 방법에 대한 연구
 cf) 알고리즘 : 어떤 일에 대한 처리 방법, 절차 
                     문제 해결 방법을 정의한 '일련의 단계적 절차'이자 어떠한 문제를 해결하기 위한 '동작들의 모임'이다

 1) Set : 순서없고, 중복허용하지 않음
     HashSet / TreeSet

 2) List : 순서있고, 중복허용한다
  - 변수 ----> 배열( 고정길이 )  -----> 가변길이      
              int  arr[30] 
              char[] ch = new char[10];

    Vector <----- jdk 1.x , 가변길이,  동기화 지원
    ArrayList  <--- jdk 2.x , 가변길이, 동기화 지원 안함.
    		검색, 대량의 데이터 삽입/삭제
    LinkedList  <--- data 삽입/삭제 수월함

  메서드 설명 
boolean offer() Queue(큐)에 객체를 넣는다 
poll()   Queue(큐)에서 데이터를 꺼내온다. 만일 Queue(큐)가 비어있다면 null 을 반환. 
peek() 큐의 맨 아래 있는 객체를 반환한다. 이 때 객체를 큐에서 제거하진 않는다

    - LinkedList 참고 사이트
     http://alecture.blogspot.com/2012/10/linkedlist.html

     Stack     LIFO
     Queue <-- interface   FIFO 
    ....

 3) Map ( set + list ) 
     <key, value> 한쌍으로 처리 
    HashMap / TreeMap

 문제] Video class 
     title 비디오제목
     category  장르
     lend   대여여부
     lendName  대여자(고객명)
     lendDate   대여일자(오늘날짜 입력하심 되요)

 Video 추가 / 삭제 / Video 리스트 출력 / 수정 / 프로그램 종료  출력하는 프로그램 작성하기.

   

 ---- 유용한 사이트 ------------------------------------
 https://e-koreatech.step.or.kr/page/lms
====================================
>> day25 - 23/12/01

 > enum 열거형 - 새로운 클래스 타입을 정의하는것
   - 특정한 값만을 가질 수 있는 데이터 타입을 정의 할때 필요하다.
 
 형식>
  [접근지정자] enum 열거형이름 { 필요한 상수들 나열,..... }


 > API <----- 자바에서 자주 쓰는 클래스들 소개!!
 java.lang package
 
   Object
   String
   StringBuffer   <--- JDK 1.x  ,  thread 
   StringBuilder  <--- JDK 5.x
   ....
 
   Wraper class : 기본 자료형에 대응되는 클래스형 자료형
    기본 자료형             클래스형(레퍼런스 또는 참조형)자료형
    int 			Integer
    float			Float
    char			Character
    double		Double
    ....			....

   java.util package
   Random class
   Scanner class
   날짜관련,...
   형식지정,..
   StringTokenizer == split 
   ....

   java.text.SimpleDateFormat


======================================
>> day24 - 23/11/30

> abstract class (추상클래스)
   - 미완성 클래스 <--- 자체적으로 객체 생성할 수 없다.
    (단, 상속 받은 자손 클래스로는 객체 생성 할 수 있다.)
   - 추상메소드를 갖고 있다.
    public void disp() {  } //일반메소드
    public abstract void disp();  // 추상메소드 - 몸체(블럭)를 갖지 않는다.
  - abstract 

   형식>
    public abstract class Point {  // 부모 추상 클래스
		void disp() {   }
		abstract void show(); // 추상메소드
    }

    class Sub extends Super {  // 자손(서브) 클래스
	추상메소드 오버라이드해야한다.
    }

  ==> 다형성 : overload, abstact 

문제1] Trans 추상클래스 <---- 부모는 모든 자손에게 상속할 수 있는 최소한의 것!!
       추상메소드 start() /  stop()

  sub class : Subway / Bus / Biclycle / Plain 
  MainEntry 에서 메인 함수 구현하기 
 
  > interface 
  - 클래스 아님.(객체 생성 안됨)
  - implements
  - 추상메소드, 상수만 가질 수 있다. ( abstract, final 생략 가능 )
  - 다중 상속 구현,....

문제2]  Trans 인터페이스 
       추상메소드 start() /  stop()

  sub class : Subway / Bus / Biclycle / Plain 
  MainEntry 에서 메인 함수 구현하기 

  > final 

     field ---> 값 변경 금지(상수)
     class ---> 상속금지
     method --> override 금지


  > 사용자 예외 만들기

  > static member : 공유해서 사용
     1회 초기화 되고, 이전 값을 가지고 사용한다.

 
==================================================
>> day23 - 23/11/29

  > OOP(객체지향)
  - class 설계 (객체 설계도 :  멤버변수 + 멤버함수)

  class Point {
	private	 int x, y;

   	public int getX(){
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
	// 필요한 메소드 및 여러가지 구현하기	
 }

 > this : 자기 자신, 객체 생성될때 그 객체의 시작 주소를 갖고 있다.
     this() : 생성자 함수의 다른 이름, 첫줄에 위치해야한다.

 > 디폴트 생성자 함수  &  API 만들기
  Cmd>javadoc -encoding UTF-8 MainEntry.java
  cmd> javadoc  해당파일.java

 > inheritance(상속)
   - extends
   - 단일 상속만 지원
   - super
   - 재사용
   - 확장

형식> 
 class Super {  // 부모 클래스

 }

 class Sub  extends  Super {  // 자식클래스 

 }

 문제2] class Person {  String name, gender,  int age }  상속한 학생 클래스 까지 구현
   class Student { int  jumsu  } 

 > this : 자기 자신, 객체 생성될때 그 객체의 시작 주소를 갖고 있다.
     this() : 생성자 함수의 다른 이름, 첫줄에 위치해야한다.

    super : 부모 클래스의 멤버에 접근할 수 있는 인스턴스  super.disp();
        super() : 부모클래스의 생성자함수 , 첫줄에 위치해야한다. 
     
        Point pt = new Point();   // pt와 같은 역할 
        pt.disp();  // super.disp();

 > override (재정의) <---- 상속
   함수명, 리턴타입, 매개변수 모두 같은 함수 
 
실습] 본인들 상속 관련 클래스들 수정(보완)하기.
 
  -- toString()

 
===================================
>> day22 - 23/11/28

 > 배열 함수

 > instance method
    static method
    	object.methodName();
	ClassName.methodName();  // <---

 > debugging (디버깅) 방법

 > OOP(객체지향)
  - class 설계

 > this : 자기 자신, 객체 생성될때 그 객체의 시작 주소를 갖고 있다.
     this() : 생성자 함수의 다른 이름, 첫줄에 위치해야한다.

 > 생성자함수(constructor method)
  - 클래스명과 동일하다
  - 리턴타입 없음 ( void 조차 사용하지 않음 )
  - 중복정의 가능함 ( overload 가능 - 중복함수 )
  -  default constructor 갖고 있음
    (단, 사용자가 생성자함수 재정의 하면 디폴트 생성자함수 기능 상실함 )
  - 멤버변수의 초기화 담당함



** 용어 조사
 class
 정보은닉(캡슐화) / 상속 / 다형성 / 추상화
 접근제한자(접근지정자) : private < default < protected < public
 생성자함수
 멤버변수 / 멤버 함수
 overload(중복함수)
 override
 object / instance
 interface
 abstract 
 this / static 

-----------------------------------------
==> ZOOM
https://us02web.zoom.us/j/6037250653?pwd=MHkwOEp4ekZyRjdvSUY4ejJHTUFOUT09

-----------------------------------------
>> 온라인에서 자바 코딩하기
 https://www.w3schools.com/java/
 http://www.tcpschool.com/java/intro
 http://www.tcpschool.com/examples/tryit/tryJava.php?filename=Intro01
 https://ideone.com/

============================
>> day21 - 23/11/27

  > 배열(Array)

  > sort (정렬)
   - 선택, 버블 소트

  https://www.youtube.com/watch?v=gARC8MApdcY
  https://www.youtube.com/watch?v=lyZQPjUT5B4&t=6s

  > 함수(method)
  메인함수 부담 줄이고, 반복적인 코드를 함수로 만들어서 호출에 의해서 사용함.
  - instance mehtod : 객체 생성하고 사용해야함(메모리상에 할당이 되어야.....)

   ex) Scanner sc = new Scanner(System.in);
     int x =  sc.nextInt();

  - static method : 객체 생성 없이 바로 사용 가능함
        objectName.methodName(); 
        ClassName.methodName(); 

   ex) S.o.pln(Math.random()); 

  - 매개변수의 유무 / 리턴타입 유무
 1) 매개변수 없고, 리턴타입 없는 경우
   public returnType  methodName() {  }

 2) 매개변수 있고, 리턴타입 없는 경우
   public returnType methodName(parameter val1, parameter val2,.....) {   }

 3) 매개변수 없고, 리턴타입 있는 경우
   public returnType methodName() {   return value;    }

 4) 매개변수 있고, 리턴타입 있는 경우
  public returnType methodName(parameter val1, parameter val2,.....) {  return value;   }

  > return 
   return 값;   // 오직 1개 값 리턴 
   return x, y; // error
   return x + y;  // 수식

   return; //제어권 넘김

 > overload(중복함수) 
  함수명 같고, 매개변수의 개수가 다르거나
  매개변수의 개수가 같다면 자료형이 다른 함수
  
  cf) override  <--- 상속 

문제5] 성적처리 프로그램 함수로 분할(분리)할것
   입력 함수 input()  - 이름 , 국어, 영어,전산 점수 
   총점 함수 total(~~~) - 총점 구하는 함수
   평균 함수 average( ~~ ) - 평균 구하는 함수
   평점(학점) grade( ~~ ) - 학점 구하는 함수 
   출력 함수 output( ) - 결과 출력하는 함수 

===============================
>> day20 - 23/11/24

  > 배열(Array)
   - 일괄처리
   - 동일한 데이터 모임
   - 메모리상에 연속적 모임
   - index 는 0부터 시작함
   - for문이랑 친함

  - 형식>
   자료형[] 배열명 = new 자료형[크기]; 
   int[] a = new int[30];   // int a[] = new int[30]

  자료형[][] 배열명 = new 자료형[행크기][열크기]; 
   int[][] a = new int[2][3];

  자료형[][][] 배열명 = new 자료형[면크기][행크기][열크기]; 
   int[][][] a = new int[2][2][3];
  
 > 확장 for문 
   for(자료형 변수명 : 컬렉션명 or 배열명) {   
	반복구문;
    }

문제1] int[] su = { 1, 7, 4, 7, 55, 90, 100, 7, 2, 7, 23 };
          7의 개수 구하기

문제2] 11월 한달간(기준 30일)의 강수량을 입력 받아서, 평균 구하는 프로그램 작성

문제3] 7명의 3과목 입력 받고, 총점, 평균, 학점 구하기 - 배열 이용하기 

 > 난수 - 2가지 방법 
 1) Math.random()  - java.lang

   Math.random() * n  <=== 0 ~ n-1 값 추출됨

 2) Random class  - java.util package 
      nextXXX();
            자료형
      nextInt();
      nextDouble();
      nextFloat(),.........

    rand.nextInt(n);    // 0 ~ n-1 값 추출됨


문제1] 업/다운 게임 프로그램 작성 (난수 이용)
1~100 숫자 중에서 임의의 난수 추출해 놓고, 사용자는 5번의 기회를줘서 입력 받는다.  
그 입력 받은 숫자와 추출한 난수가 같은지를 판정하는 프로그램 작성

문제2] 로또 프로그램 작성 :   
   1 ~ 45 숫자 중에서 6개 추출 (단, 같은수 없어야함)



 > 함수(method)



----------------------------------------
 ** 용어 조사
 class
 정보은닉(캡슐화) / 상속 / 다형성 / 추상화
 접근제한자 
 생성자함수
 멤버변수 / 멤버 함수
 overload(중복함수)
 override
 object / instance
 interface
 abstract 
 this / static 

========================
>> day19 - 23/11/23

  >  제어문
 3) 반복문
   for 
   foreach (확장for문)
   while
   do~ while

 // 변수초기화
while( 조건 ) {
	반복실행문;
	증감식; 
}
------------------------------------
 // 변수초기화
do {
	반복실행문;
	증감식; 
} while( 조건 );
	


 4) 기타
   break
   continue

과제1] 1 + (1 + 2) + (1 + 2 + 3) + (1 + 2 + 3 + 4) + (1 + 2 + 3 + 4 + 5) = ? 35

과제2] (-1) + 2 + (-3) + 4 + (-5) + ... + (-9) + 10 = ?   5

과제3] 1/2 + 2/3 + 3/4 + 4/5 + 5/6 + 6/7 + 7/8 +  8/9 + 9/10 = ?  7.98

과제4] 3개 정수 입력 받아서 큰 순으로 출력하기
3
4
5

 result >
  5 > 4 > 3

 > import / export 방법

 > 배열(Array)

 > 함수(method)

==================================
>> day18 - 23/11/22

  >  제어문
 1) 비교문
    if~else

 //문제1] 숫자 2개 입력 받아서 큰수 출력하는 프로그램 작성

 문제2] 년도 입력 받아서 윤/평년 판정 프로그램 작성
// 윤년/평년 판정 프로그램 작성
/*
 *  if (년도 % 4 == 0) 
 *       if( (년도 % 100 != 0)  || (년도 % 400 == 0) )  
 *             "윤년" ;
 */

 문제3] 전산,영어,국어 점수 입력 받아서 평균 60점이상이고,
     각 과목 과락 40점이하면 과목 불합격 처리하는 프로그램 작성

 2) 선택문
    switch ~ case

 3) 반복문
   for 
   foreach (확장for문)
   while
   do~ while

 형식>
for(초기값; 조건; 증감식) {
	반복구문 ;
}	

for(초기식;조건식;증감식) {
	수행문1;
	수행문2;
  }

 int a = 1, b;
 for( a = 1, b = 2;  a <= 2 ; a++, b+=2 ) {
	S.o.p( a + "\t" )
 }

 int a = 1, b = 2;
  for( ;  a <= 2 ;  ) {
	S.o.p( a + "\t" );
    	a++;
	b+=2;
 }

 - 초기값, 증감식은 2개 이상 기재 가능
   (단, 조건은 오직 1개여야함 )
 - 초기값, 증감식은 생략 가능 
   (단, 조건 생략하면 무한루프임)

 - 무한 루프
 for( ; ; )  {
    S.o.p( a + "\t" );
    if(조건) break;  // 탈출구문 
 }

 문제] 1~100까지의 합 구하는 프로그램 작성 

 - 이중(중첩== 다중) for문

 for(초기값; 조건1; 증감식) {


	for(초기값; 조건2; 증감식) {

		반복구문 ;

	}
}

// 과제2] 사칙연산 프로그램 작성(예외처리하기)
// 숫자 2개 입력 받고, 연산자(+, -, *, /) 1개 입력 받아서  <--- string , char

 result>
 3
 5
 +

 3 + 5 = 8 

과제3] 
1. 	2.	3.	4.
*	*****	    *	*****
**	****	   **	 ****
***	***	  ***	  ***
****	**	 ****	   **
*****	*	*****	    *

5.		6.
    *		 *********
   ***		  *******
  *****		   *****
 *******		    ***
*********	   	     *

	7.			
	    *		
	   ***		
	  *****		
	 *******	
	*********	
	 *******	
	  *****		
	   ***		
	    *
           8.	
	    *		
	   * *		
	  *   *		
	 *      *	
	*        *	
	 *      *	
	  *   *		
	   * *		
	    *	


 4) 기타
   break
   continue

 > import / export 방법

 > Exception (예외처리)
 Java는 의무적(반드시)으로 예외처리를 해야하는 상황들이 있음.
 -- 네트워크, 데이터베이스(JDBC), Thread, IO(입출력), File,......

 형식>
   try {
	정상코드(또는 예외 발생 예측 코드);
  } catch(Excption e ) {
  	예외 발생시 처리할 코드 ;
  }

 1) try ~ catch : 직접처리  <--- 권장
 2) throws : 위임
 3) throw : 예외 던지기 

 > 배열(Array)
 > 함수(method)

#######################
1. 이동혁 / 박민성 / 박재린 / 이경민 / 고라희 
2. 정수민 / 김정민 / 윤채영 / 임성현
3. 이영진 / 최원규 / 안우용 / 김단아
4. 전승민 / 박대호 / 심규혁 / 김민성 
5. 김민우 / 주현성 / 박민희 / 우지영 

==========================================
>> day17 - 23/11/21

 ## 기본 문법
 > github & eclipse 연동


 >  연산자
  최단산쉬관논삼대콤

 문제1] 월급을 단위로 계산하기
            pay = 567890; 
	result :
	만원 : 56장
	천원 : 7장
	백원 : 8개
	십원 : 9개 

 문제2] int su = 12345;

  시 : 분 : 초 
        60초 => 1분
  60분 
      60초 ==> 3600

  3 : 25 :  45

  ## 0, 0.0, NULL 를 제외한 모든 값은 '참'이다.

 > 입력 받기
 java.io <---- Input / Output
 java.util <---- Scanner  , JDK 5.x 부터 도입됨

 import package

 nextXXX()
       자료형
 nextInt()
 nextFloat()
 nextDouble()
 next()  vs  nextLine()  <--- String input method

 >  제어문
 1) 비교문
    if~else

 //문제1] 숫자 2개 입력 받아서 큰수 출력하는 프로그램 작성

 문제2] 년도 입력 받아서 윤/평년 판정 프로그램 작성
// 윤년/평년 판정 프로그램 작성
/*
 *  if (년도 % 4 == 0) 
 *       if( (년도 % 100 != 0)  || (년도 % 400 == 0) )  
 *             "윤년" ;
 */

 문제3] 전산,영어,국어 점수 입력 받아서 평균 60점이상이고,
     각 과목 과락 40점이하면 과목 불합격 처리하는 프로그램 작성


 2) 선택문
    switch ~ case

 3) 반복문
   for 
   foreach (확장for문)
   while
   do~ while

 4) 기타
   break
   continue


 > import / export 방법

 > Exception (예외처리)

 > 함수(method)
 > 배열(Array)
==========================================
>> day16 - 23/11/20


 ## 기본 문법

 > 이클립스 사용법 

** 문제 발생시 확인
 1) properties > project facets
 2) properties > java build path
 3) 하단 : problems  or  markers 

 > 접근지정자
  public  >  protected  > default  > private

 > 자료형(Data Type)
   - 기본자료형
   - 참조형

 >  연산자
 >  제어문
   
  > Java API
  https://docs.oracle.com/javase/8/docs/api
  https://docs.oracle.com/en/java/javase/11/docs/api/index.html

 > 환경변수 설정
  1. JAVA_HOME
     C:\Program Files\Java\jdk-11

  2. CLASSPATH
     .;

  3. 편집하세요 Path
     %JAVA_HOME%\bin

 
 -- cmd> java  or  javac  ,   version 확인 java -version 

public  class  ClassName {
	public static void main(String[] args) {  //  시작점(진입점)
		int x = 55;
		System.out.print("Hello World!!"); // 문장 종결 기호 ;

	} // end main

 }  // end class

 >  컴파일시
 cmd> javac  파일명.확장자
          javac   HelloJava.java 

  cf) 한글 포함 되어 에러 발생시 해결 방법
 cmd> javac -encoding UTF-8  HelloJava.java

 > 실행시
  cmd> java  파일명 
           java   HelloJava 

 > 출력함수
 print()  : 개행 없이 출력
 printf() : 서식을 이용한 출력 - %c, %s, %d, %f,.......
 println() : 출력하고 개행(줄바꿈)

실습문제] Info.java
   이름, 주소, 연락처  출력하는 프로그램 작성하세요.
 
  - package > class > method > field 

  > JDK 설치 및 환경설정
   - JDK : 개발 + 실행 환경
   - JRE :  실행환경

  > JDK 11 download
 https://www.oracle.com/kr/java/technologies/javase/jdk11-archive-downloads.html

 > eclipse : 2020-09
  https://www.eclipse.org/downloads/packages/release/2020-09/r

  > eclipse : 2022-06
  https://www.eclipse.org


 > 시스템 확인하기
   - 메모리 64
   - 자바 설치 유무

C:\Program Files\Java\jdk-11
===================================
1. 개인과제
2. 팀과제
   가) 일일과제 - 알고리즘 문제 
   가-2) 주과제 - 발표(문서, 발표)

   나) 미니프로젝트 - 2~3회 (개월수에 따라 차등 있음)
       한화 기수님들은 기업체 수행과제 있음
   다) 파이널 과제 - 1회 (최종)



*** 유용한 사이트 ************************************
 https://www.javatpoint.com

 > 전산용어
 http://www.terms.co.kr
 https://ko.wikipedia.org

 http://www.etnews.com

 https://www.codeproject.com

 > 동영상 강좌 & 문제 은행
 https://cafe.naver.com/thisisjava
 https://cafe.naver.com/javachobostudy
 https://www.orentec.co.kr/
 신입SW인력을 위한 실전 자바(Java)
 https://www.youtube.com/playlist?list=PLieE0qnqO2kTyzAlsvxzoulHVISvO8zA9
 https://www.opentutorials.org/course/1223


 > 자격증
   ocjp
   정보처리 기사(산업기사)

 > 알고리즘
 https://www.acmicpc.net
https://codeup.kr
https://leetcode.com/problemset/all
 https://programmers.co.kr
 https://swexpertacademy.com/main/main.do

-------------------------------------------------